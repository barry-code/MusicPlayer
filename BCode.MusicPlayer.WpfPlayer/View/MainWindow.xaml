<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:BCode.MusicPlayer.WpfPlayer"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:infra="clr-namespace:BCode.MusicPlayer.WpfPlayer.Shared" 
    x:Class="BCode.MusicPlayer.WpfPlayer.View.MainWindow"    
    mc:Ignorable="d"         
    WindowStyle="None" 
    AllowsTransparency="True"   
    ResizeMode="CanResizeWithGrip"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextElement.FontWeight="Medium"
    TextElement.FontSize="14"
    FontFamily="{materialDesign:MaterialDesignFont}"
    Background="Transparent"
    Height="700" 
    Width="900"
    MouseLeftButtonDown="Window_MouseLeftButtonDown">

    <Window.Resources>
        <infra:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <infra:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter"/>        
    </Window.Resources>

    <Border CornerRadius="10" Background="{DynamicResource MaterialDesignPaper}">
        <materialDesign:DialogHost IsOpen="{Binding IsLoading}">
            <materialDesign:DialogHost.DialogContent>
                <materialDesign:Card UniformCornerRadius="5" MinWidth="250">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="50"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="Loading Songs..." VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0" />
                        <ProgressBar Grid.Row="1" IsIndeterminate="True" Style="{StaticResource MaterialDesignCircularProgressBar}" Margin="10,0" />
                        <Button Grid.Row="2" Content="Cancel" Command="{Binding CancelLoadCmd}" VerticalAlignment="Center" Margin="10,0"/>
                    </Grid>
                </materialDesign:Card>                
            </materialDesign:DialogHost.DialogContent>
            
            <Grid Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40" />
                    <RowDefinition Height="1*" MinHeight="100" />
                    <RowDefinition Height="80" />
                    <RowDefinition Height="5*" />
                    <RowDefinition Height="60"/>
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top">
                    <Button Name="btnMinimize" Height="30" Margin="5,0" Style="{StaticResource MaterialDesignToolButton}" Click="btnMinimize_Click" >
                        <materialDesign:PackIcon Kind="WindowMinimize" Height="25" Width="25"/>
                    </Button>
                    <Button Name="btnMaximize" Height="30" Margin="5,0" Style="{StaticResource MaterialDesignToolButton}" Click="btnMaximize_Click">
                        <materialDesign:PackIcon Kind="WindowMaximize" Height="25" Width="25"/>
                    </Button>
                    <Button Name="btnClose" Height="30" Margin="5,0" Style="{StaticResource MaterialDesignToolButton}" Click="btnClose_Click">
                        <materialDesign:PackIcon Kind="WindowClose" Height="25" Width="25"/>
                    </Button>
                </StackPanel>

                <Grid Grid.Row="1" Margin="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1.5*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="1.5*" />
                    </Grid.ColumnDefinitions>

                    <Button Grid.Column="0" x:Name="prevBtn" Command="{Binding PrevCmd}" Height="Auto" Width="Auto" Margin="10,0" Style="{StaticResource MaterialDesignRaisedButton}" materialDesign:ShadowAssist.ShadowDepth="Depth2">
                        <materialDesign:PackIcon Kind="SkipPrevious"  Height="Auto" Width="Auto" MaxHeight="80" MaxWidth="80"/>
                    </Button>

                    <Button Grid.Column="1" x:Name="skipBackBtn" Command="{Binding SkipBackCmd}" Height="Auto" Width="Auto" Margin="10,0" Style="{StaticResource MaterialDesignRaisedButton}" materialDesign:ShadowAssist.ShadowDepth="Depth2">
                        <materialDesign:PackIcon Kind="Rewind"  Height="Auto" Width="Auto" MaxHeight="80" MaxWidth="80"/>
                    </Button>

                    <Button Grid.Column="2" x:Name="playPauseBtn" Command="{Binding PlayPauseCmd}" Height="Auto" Width="Auto" Margin="10,0"  Style="{StaticResource MaterialDesignRaisedButton}" materialDesign:ShadowAssist.ShadowDepth="Depth2">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Play" Height="Auto" Width="Auto" MaxHeight="80" MaxWidth="80" Visibility="{Binding Player.IsPlaying, Converter={StaticResource InvertedBooleanToVisibilityConverter}}" />
                            <materialDesign:PackIcon Kind="Pause" Height="Auto" Width="Auto" MaxHeight="80" MaxWidth="80" Visibility="{Binding Player.IsPlaying, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        </StackPanel>                        
                    </Button>

                    <Button Grid.Column="3" x:Name="skipForwardBtn" Command="{Binding SkipAheadCmd}" Height="Auto" Width="Auto" Margin="10,0" Style="{StaticResource MaterialDesignRaisedButton}" materialDesign:ShadowAssist.ShadowDepth="Depth2">
                        <materialDesign:PackIcon Kind="FastForward" Height="Auto" Width="Auto" MaxHeight="80" MaxWidth="80"/>
                    </Button>

                    <Button Grid.Column="4" x:Name="nextBtn" Command="{Binding NextCmd}" Height="Auto" Width="Auto" Margin="10,0" Style="{StaticResource MaterialDesignRaisedButton}" materialDesign:ShadowAssist.ShadowDepth="Depth2">
                        <materialDesign:PackIcon Kind="SkipNext"  Height="Auto" Width="Auto" MaxHeight="80" MaxWidth="80"/>
                    </Button>
                </Grid>

                <Grid Grid.Row="2" VerticalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25" />
                        <RowDefinition Height="25" />
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top">
                        <Label Content="Track:" Foreground="{StaticResource SecondaryHueMidBrush}" />
                        <Label Content="{Binding Player.CurrentSong.Name}" MinWidth="80" />
                        <Label Content="Artist:" Foreground="{StaticResource SecondaryHueMidBrush}" Margin="10,0,0,0" />
                        <Label Content="{Binding Player.CurrentSong.ArtistName}" MinWidth="80" />
                        <Label Content="Album:" Foreground="{StaticResource SecondaryHueMidBrush}" Margin="10,0,0,0" />
                        <Label Content="{Binding Player.CurrentSong.AlbumName}" MinWidth="80" />
                    </StackPanel>

                    <Grid Grid.Row="1" VerticalAlignment="Bottom">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="70"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="{Binding Player.CurrentElapsedTime, StringFormat=mm\\:ss}" HorizontalAlignment="Center" Margin="10,0" />
                        <Slider Grid.Column="1" HorizontalAlignment="Stretch" Margin="10,0" Style="{StaticResource MaterialDesignDiscreteHorizontalSlider}" Value="{Binding CurrentSongElapsedTime, Mode=TwoWay}" Minimum="0" Maximum="{Binding CurrentSongMaxTime}" Height="20" />
                        <TextBlock Grid.Column="2" HorizontalAlignment="Center" Margin="10,0" Text="{Binding Player.CurrentSong.Duration, StringFormat=mm\\:ss}"/>
                    </Grid>

                </Grid>

                <Grid Grid.Row="3" Margin="0,5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="200" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <materialDesign:Card Grid.Column="0" Margin="5" materialDesign:ShadowAssist.ShadowDepth="Depth2">
                        <StackPanel Orientation="Vertical">
                            <Button Margin="5" Padding="2" Command="{Binding AddFilesCmd}" Style="{DynamicResource MaterialDesignRaisedButton}">
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                    <TextBlock Text="Add File(s) to PlayList"/>
                                    <materialDesign:PackIcon Kind="Files" Margin="10,0,0,0"/>
                                </StackPanel>
                            </Button>
                            <Button Margin="5" Padding="2" Command="{Binding AddFolderCmd}" Style="{DynamicResource MaterialDesignRaisedButton}">
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                    <TextBlock Text="Add Folder to PlayList"/>
                                    <materialDesign:PackIcon Kind="Folder" Margin="10,0,0,0"/>
                                </StackPanel>
                            </Button>
                            <Button Margin="5" Padding="2" Command="{Binding ClearPlayListCmd}" Style="{DynamicResource MaterialDesignRaisedButton}">
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                    <TextBlock Text="Clear PlayList"/>
                                    <materialDesign:PackIcon Kind="ClearCircle" Margin="10,0,0,0"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </materialDesign:Card>

                    <materialDesign:Card Grid.Column="1" Margin="5" materialDesign:ShadowAssist.ShadowDepth="Depth2">
                        <DataGrid x:Name="playlistGrid" ItemsSource="{Binding Player.PlayList}" SelectedItem="{Binding Player.CurrentSong, Mode=OneWay}" IsReadOnly="True" CanUserAddRows="False" CanUserDeleteRows="False" AutoGenerateColumns="False" Style="{StaticResource MaterialDesignDataGrid}" SelectionMode="Single" CanUserSortColumns="True" CanUserResizeColumns="True" SelectionUnit="FullRow" Margin="5" Background="Transparent">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Id" Binding="{Binding Order}" IsReadOnly="True" />
                                <DataGridTextColumn Header="Song" Binding="{Binding Name}" IsReadOnly="True" />
                                <DataGridTextColumn Header="Artist" Binding="{Binding ArtistName}" IsReadOnly="True" />
                                <DataGridTextColumn Header="Album" Binding="{Binding AlbumName}" IsReadOnly="True" />
                                <DataGridTextColumn Header="Year" Binding="{Binding Year}" IsReadOnly="True" />
                                <DataGridTemplateColumn IsReadOnly="True">
                                    <DataGridTemplateColumn.Header>
                                        <TextBlock Text="Duration"/>
                                    </DataGridTemplateColumn.Header>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Duration, StringFormat=mm\\:ss}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="Path" Binding="{Binding Path}" IsReadOnly="True" />
                            </DataGrid.Columns>
                            <DataGrid.InputBindings>
                                <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding PlaySongFromPlayListCmd}" CommandParameter="{Binding ElementName=playlistGrid, Path=SelectedIndex}"/>
                            </DataGrid.InputBindings>
                        </DataGrid>
                    </materialDesign:Card>
                </Grid>

                <Grid Grid.Row="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="250"/>
                    </Grid.ColumnDefinitions>
                    <materialDesign:Card Grid.Column="0" Margin="5" Visibility="{Binding ShowNotificationAlert, Converter={StaticResource InvertedBooleanToVisibilityConverter}}" materialDesign:ShadowAssist.ShadowDepth="Depth2">                        
                        <materialDesign:Snackbar Message="{Binding CurrentStatusMessage}" HorizontalAlignment="Stretch" Foreground="{DynamicResource SecondaryHueMidBrush}" Background="{DynamicResource MaterialDesignCardBackground}" VerticalAlignment="Center" IsActive="True" />
                    </materialDesign:Card>
                    <materialDesign:Card Grid.Column="0" Margin="5" Visibility="{Binding ShowNotificationAlert, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <materialDesign:Snackbar x:Name="snackBarMessages" MessageQueue="{Binding NotificationMessageQueue}" HorizontalAlignment="Stretch" Foreground="{DynamicResource SecondaryHueMidBrush}" Background="{DynamicResource MaterialDesignCardBackground}" VerticalAlignment="Center" IsActiveChanged="snackBarMessages_IsActiveChanged" />
                    </materialDesign:Card>

                    <materialDesign:Card Grid.Column="1" Margin="5" materialDesign:ShadowAssist.ShadowDepth="Depth2">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <materialDesign:PackIcon Kind="VolumeHigh" Height="30" Width="30" Margin="5,0" Visibility="{Binding Player.IsMuted, Converter={StaticResource InvertedBooleanToVisibilityConverter}}"/>
                            <materialDesign:PackIcon Kind="VolumeOff" Height="30" Width="30" Margin="5,0" Visibility="{Binding Player.IsMuted, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <Slider Value="{Binding Player.CurrentVolume}" Width="180" VerticalAlignment="Center" Minimum="0" Maximum="100" />
                        </StackPanel>
                    </materialDesign:Card>
                </Grid>

            </Grid>
        </materialDesign:DialogHost>        
    </Border>

</Window>
